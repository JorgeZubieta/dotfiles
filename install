#!/bin/bash
############################
# install
# This script creates symlinks from the home directory to any desired dotfiles in ~/dotfiles
############################

########## Variables

dir=$( cd "$(dirname "${BASH_SOURCE[0]}")" ; pwd -P )

# list of files/folders to symlink in homedir
dotfiles="git-completion.bash gitconfig git_ps1.bash vim vimrc gvimrc gitignore_global tmux.conf bash_profile screenrc latexmkrc powerline ctags ctags.d Xresources compton.conf xinitrc xprofile"

##########

# change to the dotfiles directory
echo -n "Changing to the $dir directory ..."
cd $dir
echo "done"

for file in $dotfiles; do
    echo "Creating symlink to $file in home directory."
    ln -sf $dir/$file ~/.$file
done

#install config files
mkdir -p ~/.config
for file in config/*; do
    # Here $file looks like: $file=config/foo
    echo "Creating symlink to $file in .config directory."
    ln -sf $dir/$file ~/.$file
done

ln -sf $dir/vim ~/.config/nvim
ln -sf $dir/vimrc ~/.config/nvim/init.vim

mkdir -p ~/.config/i3
ln -sf $dir/i3.config ~/.config/i3/config
ln -sf $dir/i3exit ~/.local/bin

mkdir -p ~/.config/i3blocks
ln -sf $dir/i3blocks-contrib ~/.config/i3blocks/blocks

mkdir -p ~/.config/sxhkd
ln -sf $dir/sxhkdrc ~/.config/sxhkd

mkdir -p ~/.config/rofi
ln -sf $dir/config.rasi ~/.config/rofi

mkdir -p ~/.config/zathura
ln -sf $dir/zathurarc ~/.config/zathura

mkdir -p ~/.config/ranger
ln -sf $dir/rifle.conf ~/.config/ranger

mkdir -p ~/.config/qutebrowser
ln -sf $dir/qutebrowser/autoconfig.yml ~/.config/qutebrowser

mkdir -p ~/.urxvt/ext
ln -sf $dir/urxvt/urxvt-resize-font/resize-font ~/.urxvt/ext
ln -sf $dir/urxvt/urxvt-perls/keyboard-select ~/.urxvt/ext
ln -sf $dir/urxvt/urxvt-perls/deprecated/url-select ~/.urxvt/ext

# modify using these commands
# xdg-mime default mpv.desktop video/x-matroska
# xdg-mime query filetype foo.mkv
ln -sf $dir/mimeapps.list ~/.config

#move executable files to bin
echo "Moving executable files into ~/.local/bin directory"
mkdir -p ~/.local/bin
ln -s $dir/git_diff_wrapper ~/.local/bin
ln -s $dir/i3-get-window-criteria- ~/.local/bin
ln -s ~/.vim/bundle/vim-themis/bin/themis ~/.local/bin

echo "Install powerline regardless of OS"
pip install --user --upgrade powerline-status
ln -s $(pip show powerline-status | grep 'Location' | rev | cut -d' ' -f 1 | rev)/powerline/bindings/tmux/powerline.conf ~/.local/powerline.conf

echo "Initializing submodules..."
git submodule update --recursive --init
./build

# Relies on nvm not to use sudo
# for javascript and typescript autocomplete
npm install -g typescript typescript-language-server

# ale relies on eslint_d for fastser linting
npm install -g eslint_d

#install fonts
./fonts/install.sh

# install fzf
ln -sf $dir/fzf ~/.fzf
./fzf/install --all

# install xwinwrap
( cd xwinwrap && make && mv xwinwrap ~/.local/bin )

dconf load /desktop/ibus/ < $dir/ibus.dconf
